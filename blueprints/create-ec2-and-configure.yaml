spec_version: 2-preview
description: create an ec2 instance with Terraform and install Nginx on the vm using Ansible

inputs:
  agent:
    type: agent
  connection_delay: 
    type: string
    default: "60"
    description: "time (in seconds) that Ansible should wait before starting to check the target host's connectivity"
  connection_timeout:
    type: string
    default: "300"
    description: "maximum time (in seconds) that Ansible will wait for the host's network connection to become available"

grains:
  create-ec2:
    kind: terraform
    spec:
      source:
        path: terraform/create-ec2-instance
        store: test-spec2-public
      agent:
        name: '{{.inputs.agent}}'
      env-vars:
        - TF_LOG: debug
      outputs:
        - public_ip
        - password
        
  install-nginx:
    kind: ansible
    depends-on: create-ec2
    spec: 
      source:
        store: test-spec2-public
        path: ansible/install_nginx_on_ec2.yaml
      agent:
        name: '{{ .inputs.agent }}'
      inputs:
        - connection_delay: '{{ .inputs.connection_delay }}'
        - connection_timeout: '{{ .inputs.connection_timeout }}'
      inventory-file:
        all:
          hosts:
            ec2_instance:
              ansible_host: '{{ .grains.create-ec2.outputs.public_ip }}'
              ansible_user: 'ubuntu'
              ansible_password: '{{ .grains.create-ec2.outputs.password }}'
              ansible_become: yes
              ansible_become_method: sudo
              ansible_become_pass: '{{ .grains.create-ec2.outputs.password }}' 
            localhost:
              ansible_connection: local
              
      outputs:
        - nginx_service_result
               
outputs:
  nginx_status:
    value: '{{ .grains.install-nginx.outputs.nginx_service_result }}'
  ec2_host:
    value: '{{ .grains.create-ec2.outputs.public_ip }}'
  password:
   value: '{{ .grains.create-ec2.outputs.password }}'
              